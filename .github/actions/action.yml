name: 'CDK and Stack Setup'
description: 'Sets up Node.js, AWS CDK, and Java for CDK provisioning'
inputs:
  aws-access-region:
    description: 'AWS region to use'
 #   required: true
    default: 'us-east-1'
#  aws-access-key-id:
#    description: 'AWS Access ID'
#    required: true
#  aws-access-secret-key:
#    description: 'AWS Access Secrete'
#    required: true


runs:
  using: "composite"
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'

    - name: Install AWS CDK
      shell: bash
      run: npm install -g aws-cdk

    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 5: Run Maven build
    - name: Build with Maven
      shell: bash
      run: mvn clean package -DskipTests

    # confirgure aws account and credentials as env using git vault,
    # this also demonstrate using input variable

    - name: Setup AWS Account and Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.aws-access-region }}