name: Provision or Deprovision Resource on AWS

on:
  push:
    branches:
      - main

jobs:
  provision:
    runs-on: ubuntu-latest

    env:
      CDK_DEFAULT_REGION: us-east-1 #${{ secrets.AWS_REGION }}
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}

    steps:
      # Step to install Node.js (you can specify the version you need)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.0'  # Specify your required Node.js version

      # Install aws cdk
      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-  

            # Step 2: Set up JDK 21 (you can change this to the JDK version your project requires)
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 4: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # checkout the code from this repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 5: Run Maven build
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # confirgure aws account and credentials as env using git vault
      - name: Setup AWS Account and Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:   ${{ secrets.AWS_REGION }}

      # provision resources
      - name: Provision Resources
        run: |
           echo $CDK_DEFAULT_REGION
           cdk bootstrap
           cdk deploy --require-approval never

  deprovision:
    runs-on: ubuntu-latest
    needs: [provision]
    if: github.ref == 'refs/heads/decommission'
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup AWS Account and Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deprovision Resources
        run: |
          cdk destroy --force
